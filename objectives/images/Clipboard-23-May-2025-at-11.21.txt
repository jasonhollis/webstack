#!/bin/bash

REPO_DIR="/opt/webstack/html"
OBJECTIVES_DIR="/opt/webstack/objectives"
VERSION_FILE="$REPO_DIR/VERSION"
SNAPSHOT_SCRIPT="/opt/webstack/bin/snapshot_webstack.sh"
LOG_FILE="/opt/webstack/logs/deploy_webhook.log"
PUSHOVER_USER="uh1ozrrcj8y5jktg5euc6yz6zpdcqh"
PUSHOVER_TOKEN="aqfyb8hsfb6txs6pd4qwchjwd3iccb"
SOUND="alien"

# Accept version from argument or prompt
if [[ -n "$1" ]]; then
  NEW_VERSION="$1"
else
  read -p "🔢 Enter new version (e.g. v1.0.2): " NEW_VERSION
fi

if [[ -z "$NEW_VERSION" ]]; then
  echo "❌ No version entered. Aborting."
  exit 1
fi

echo "$NEW_VERSION" > "$VERSION_FILE"

# Create new iteration and objectives logs for the new version
ITER_LOG="${OBJECTIVES_DIR}/${NEW_VERSION}_iteration_log.md"
OBJ_LOG="${OBJECTIVES_DIR}/${NEW_VERSION}_objectives.md"
touch "$ITER_LOG" "$OBJ_LOG"
chmod 664 "$ITER_LOG" "$OBJ_LOG"
chown root:www-data "$ITER_LOG" "$OBJ_LOG"

# Trigger snapshot (does NOT delete or modify logs)
"$SNAPSHOT_SCRIPT"

# Log the version bump
echo "[$(TZ='Australia/Sydney' date '+%Y-%m-%d %H:%M:%S %Z')] Bumped to $NEW_VERSION" >> "$LOG_FILE"

# Send Pushover notification
curl -s \
  -F "token=$PUSHOVER_TOKEN" \
  -F "user=$PUSHOVER_USER" \
  -F "title=Webstack Deploy" \
  -F "message=🔢 Deployed $NEW_VERSION ($(hostname))" \
  -F "sound=$SOUND" \
  https://api.pushover.net/1/messages.json > /dev/null

echo "✅ Version $NEW_VERSION deployed, pushed, and objectives/iteration logs created!"
