cat << 'EOF' > /opt/webstack/bin/update_version.sh
#!/bin/bash

REPO_DIR="/opt/webstack/html"
OBJECTIVES_DIR="/opt/webstack/objectives"
VERSION_FILE="$REPO_DIR/VERSION"
SNAPSHOT_SCRIPT="/opt/webstack/bin/snapshot_webstack.sh"
LOG_DIR="/opt/webstack/logs"
LOG_FILES_TO_CLEAR="deploy.log deploy_webhook.log error.log nginx_access.log nginx_error.log webhook.log access.log"
PUSHOVER_USER="uh1ozrrcj8y5jktg5euc6yz6zpdcqh"
PUSHOVER_TOKEN="aqfyb8hsfb6txs6pd4qwchjwd3iccb"
SOUND="alien"

# Accept version from argument or prompt
if [[ -n "$1" ]]; then
  NEW_VERSION="$1"
else
  read -p "🔢 Enter new version (e.g. v1.0.2): " NEW_VERSION
fi

if [[ -z "$NEW_VERSION" ]]; then
  echo "❌ No version entered. Aborting."
  exit 1
fi

# Write version file
echo "$NEW_VERSION" > "$VERSION_FILE"

# Always pre-create new logs for the new version
touch "$OBJECTIVES_DIR/${NEW_VERSION}_iteration_log.md"
touch "$OBJECTIVES_DIR/${NEW_VERSION}_objectives.md"
chown root:www-data "$OBJECTIVES_DIR/${NEW_VERSION}_iteration_log.md" "$OBJECTIVES_DIR/${NEW_VERSION}_objectives.md"
chmod 664 "$OBJECTIVES_DIR/${NEW_VERSION}_iteration_log.md" "$OBJECTIVES_DIR/${NEW_VERSION}_objectives.md"

# Rotate logs: Only clear those NOT needed for analytics
for LOG in $LOG_FILES_TO_CLEAR; do
  if [[ -f "$LOG_DIR/$LOG" ]]; then
    mv "$LOG_DIR/$LOG" "$LOG_DIR/${LOG}.bak.$(date +%s)"
    touch "$LOG_DIR/$LOG"
    chown www-data:www-data "$LOG_DIR/$LOG"
    chmod 664 "$LOG_DIR/$LOG"
  fi
done

echo "✅ Log cleanup done, analytics logs preserved."

# Snapshot before bump
bash "$SNAPSHOT_SCRIPT"
SNAP_STATUS=$?
if [[ $SNAP_STATUS -ne 0 ]]; then
  echo "❌ Snapshot failed. Aborting."
  exit 1
fi

LATEST_SNAP=$(ls -1t /opt/webstack/snapshots/webstack-*.zip 2>/dev/null | head -1)

# Git commit & push
cd /opt/webstack || exit 1
git add html/VERSION
git add html/*
git add objectives/*
git add bin/*
git commit -am "⬆️ Version bump: $NEW_VERSION"
git push

# Pushover notification
if [[ -n "$PUSHOVER_USER" && -n "$PUSHOVER_TOKEN" ]]; then
  MSG="✅ $NEW_VERSION deployed, snapshot created: $(basename "$LATEST_SNAP")"
  curl -s \
    -F "token=$PUSHOVER_TOKEN" \
    -F "user=$PUSHOVER_USER" \
    -F "title=Webstack Deploy" \
    -F "message=$MSG" \
    -F "sound=$SOUND" \
    https://api.pushover.net/1/messages.json > /dev/null
fi

echo "✅ Version $NEW_VERSION deployed, pushed, and Pushover notified!"
EOF

chmod 755 /opt/webstack/bin/update_version.sh
